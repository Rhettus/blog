---
layout: post
title: "Saturn 6: A Compact 10” Minilab"
date: 2025-01-04
categories: [Projects, Raspberry Pi, Networking]
img: 2025-01-04-Saturn6/Saturn6-5-01042025.jpg 
tags: [Saturn 6, Raspberry Pi, NAS, DIY, Homelab]
---

This is **Saturn 6**: a compact 10” minilab that hosts 5x Raspberry Pi's and an ARM-based NAS. It's a homage to the Saturn V rocket, my Mercury One 3D printer, and space exploration in general.

<div class="image-gallery-container">
  <div class="image-gallery">
    <img src="/assets/img/2025-01-04-Saturn6/Saturn6-1-01042025.jpg" alt="Saturn 6 Image 1" data-full="/assets/img/2025-01-04-Saturn6/Saturn6-1-01042025.jpg">
    <img src="/assets/img/2025-01-04-Saturn6/Saturn6-2-01042025.jpg" alt="Saturn 6 Image 2" data-full="/assets/img/2025-01-04-Saturn6/Saturn6-2-01042025.jpg">
    <img src="/assets/img/2025-01-04-Saturn6/Saturn6-3-01042025.jpg" alt="Saturn 6 Image 3" data-full="/assets/img/2025-01-04-Saturn6/Saturn6-3-01042025.jpg">
    <img src="/assets/img/2025-01-04-Saturn6/Saturn6-4-01042025.jpg" alt="Saturn 6 Image 4" data-full="/assets/img/2025-01-04-Saturn6/Saturn6-4-01042025.jpg">
    <img src="/assets/img/2025-01-04-Saturn6/Saturn6-5-01042025.jpg" alt="Saturn 6 Image 5" data-full="/assets/img/2025-01-04-Saturn6/Saturn6-5-01042025.jpg">
    <img src="/assets/img/2025-01-04-Saturn6/Saturn6-6-01042025.jpg" alt="Saturn 6 Image 6" data-full="/assets/img/2025-01-04-Saturn6/Saturn6-6-01042025.jpg">
  </div>
</div>

<div id="lightbox" class="lightbox">
  <span class="close-button">&times;</span>
  <img class="lightbox-content" id="lightbox-img">
  <div id="lightbox-caption"></div>
</div>

<style>
  .image-gallery-container {
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  .image-gallery {
    display: flex;
    gap: 10px;
    padding: 10px 0;
  }
  .image-gallery img {
    height: 200px;
    width: auto;
    object-fit: cover;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    cursor: pointer;
    transition: transform 0.3s ease;
  }
  .image-gallery img:hover {
    transform: scale(1.05);
  }
  .lightbox {
    display: none;
    position: fixed;
    z-index: 999;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    justify-content: center;
    align-items: center;
  }
  .lightbox-content {
    max-width: 90%;
    max-height: 90%;
    object-fit: contain;
  }
  .close-button {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    cursor: pointer;
  }
  #lightbox-caption {
    position: absolute;
    bottom: 20px;
    left: 0;
    right: 0;
    text-align: center;
    color: #fff;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.5);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const lightbox = document.getElementById('lightbox');
    const lightboxImg = document.getElementById('lightbox-img');
    const lightboxCaption = document.getElementById('lightbox-caption');
    const closeButton = document.querySelector('.close-button');
    const galleryImages = document.querySelectorAll('.image-gallery img');

    function showNextImage() {
      const currentImg = document.querySelector('.image-gallery img[src="' + lightboxImg.src + '"]');
      const nextImg = currentImg.nextElementSibling || document.querySelector('.image-gallery img:first-child');
      lightboxImg.src = nextImg.getAttribute('data-full') || nextImg.src;
      lightboxCaption.textContent = nextImg.alt;
    }

    function showPreviousImage() {
      const currentImg = document.querySelector('.image-gallery img[src="' + lightboxImg.src + '"]');
      const prevImg = currentImg.previousElementSibling || document.querySelector('.image-gallery img:last-child');
      lightboxImg.src = prevImg.getAttribute('data-full') || prevImg.src;
      lightboxCaption.textContent = prevImg.alt;
    }

    galleryImages.forEach(img => {
      img.addEventListener('click', function() {
        lightbox.style.display = 'flex';
        lightboxImg.src = this.getAttribute('data-full') || this.src;
        lightboxCaption.textContent = this.alt;
      });
    });

    function closeLightbox() {
      lightbox.style.display = 'none';
    }

    closeButton.addEventListener('click', closeLightbox);

    lightbox.addEventListener('click', function(e) {
      if (e.target === this) {
        closeLightbox();
      }
    });

    document.addEventListener('keydown', function(e) {
      if (lightbox.style.display === 'flex') {
        if (e.key === 'Escape') {
          closeLightbox();
        } else if (e.key === 'ArrowRight') {
          showNextImage();
        } else if (e.key === 'ArrowLeft') {
          showPreviousImage();
        }
      }
    });
  });
</script>



## About the Build

The chassis is made from 2020 T-slot extrusions I cut up, and almost everything else is 3D printed. This is a 100% DIY project—you can't buy this.

## Hardware

On the top panel sits a Unifi Access Point.

| U | Device |
|:-:|:-------|
| 8 | Unifi USG |
| 7 | Managed 2.5Gb PoE switch with 10G SFP+ - MokerLink |
| 6 | Patch Panel |
| 5 | Managed 2.5Gb PoE switch with 10G SFP+ - MokerLink |
| 4 | 5x Raspberry Pi 5's (8GB), Waveshare PoE + NVMe hats |
| 3 | "" |
| 2 | NAS - CM3588 with 16GB RAM running OMV with 4x Crucial 4TB NVMe's in RAIDZ1 (10TB usable space) |
| 1 | Blank - room for an N100 or ITX-based machine if required in the future. |

## Design Philosophies

- **Portable**: Designed for moving house, must be able to be unplugged and set up at a new location in minutes. Handles have been added for easy transport. Ethernet cables can be quickly detached using the rear patch panel.
- **White Rack**: After years of dealing with black racks, black cables, and black servers—and not being able to see anything—I wanted something different. White racks make everything so much easier to see and work with.
- **All in One**: A power and a single internet cable are the only connections needed to be fully operational. Power bricks and the ISP router can be attached to the DIN rail below.
- **Labeling**: Everything must be labeled—cables, compute, etc. No more guessing what cable is what or what Pi is what.
- **Flexible**: It handles standard home services while remaining versatile for lab experiments (Slurm, DBs, Kubernetes, Ansible... anything I feel like testing). I split the switches—one for home and one for the lab—so I can power off or reconfigure the lab switch without affecting the rest of the house.
- **Accessible**: Fast and tool-less access to the hardware. It's no good if it's a pain to open up and work on. Panels can be removed with latches in seconds. Thanks, Team Voron!
- **Power Efficient**: My compute needs are light, but it needs to be flexible for experimentation. Currently at ~80W including the highly inefficient Xfinity router and powering 3x Unifi AP's over PoE. I can reduce this to about 60W by powering off the rack AP and a few of the Pi's when not in use.

## 3D Files

For those interested, I’ve uploaded the 3D files to a [GitHub repository](https://github.com/Rhettus/Saturn6). Most of the chassis components are remixes, but the faceplates, panels, and skirts are my own design.

### Notes:

- The files were created in Tinkercad, so only STL files are available (no STEP files, sorry!).
- I consider this an **alpha release**—it works for me, but tolerances could be tighter, and some parts could be designed more efficiently.

---


